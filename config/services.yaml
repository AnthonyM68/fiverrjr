# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Ce fichier est le point d'entrée pour configurer vos propres services.
# Les fichiers dans le sous-répertoire packages/ configurent vos dépendances.

# Put parameters here that don't need to change on each machine where the app is deployed

# Mettez ici les paramètres qui n'ont pas besoin de changer sur chaque machine où l'application est déployée.

# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration

parameters:
  # Définition des répertoires pour les images selon le type d'utilisateur ou de service
  pictures_directory: "%kernel.project_dir%/public/uploads"
  developer_pictures_directory: "%kernel.project_dir%/public/uploads/developers"
  client_pictures_directory: "%kernel.project_dir%/public/uploads/clients"
  # ServiceItem
  service_pictures_directory: "%kernel.project_dir%/public/uploads/services"
  # Stripe
  stripe_secret_key: 'sk_test_51Pgnb62KkncCu3lU4ayYPA1TrKfd49176UiSUwRQ8R7TDBDjJFPZ88F1LbG7BqlKb6bPM9fnp5mxvwTXYa0lZT8100lUAEBMoG'
  stripe_public_key: 'pk_test_51Pgnb62KkncCu3lUQiFZy1S3mladFpKQaze4iTCEnD65vyQlGjVSiYYOdt9mg1Hg0jXp540By2jOJiQT6NNhsesp00rnVUf8Ej'  

services:
  # Ensure CSRF protection by defining the CSRF token manager
  # Assure la protection CSRF en définissant le gestionnaire de jetons CSRF
  Symfony\Component\Security\Csrf\CsrfTokenManagerInterface: "@security.csrf.token_manager"

  # Symfony\Component\HttpFoundation\Session\SessionInterface: '@session.factory'

  # Default configuration for services in this file
  # Configuration par défaut pour les services dans ce fichier
  _defaults:
    autowire: true # Automatically injects dependencies in your services. Injection automatique des dépendances dans vos services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc. Enregistre automatiquement vos services comme commandes, abonnés aux événements, etc.

  # Makes classes in src/ available to be used as services
  # Rendre les classes dans src/ disponibles pour être utilisées comme services
  # This creates a service per class whose id is the fully-qualified class name
  # Cela crée un service par classe dont l'identifiant est le nom de classe entièrement qualifié
  App\:
    resource: "../src/"
    exclude:
      - "../src/DependencyInjection/"
      - "../src/Entity/"
      - "../src/Kernel.php"

  # Add more service definitions when explicit configuration is needed
  # Ajoutez plus de définitions de services lorsque des configurations explicites sont nécessaires
  # Please note that last definitions always *replace* previous ones
  # Notez que les dernières définitions remplacent toujours les précédentes

  # Register the CircularReferenceHandler service
  # Enregistrer le service CircularReferenceHandler
  App\Serializer\CircularReferenceHandler: ~

 # Listener to intercept form submissions and set the registration date for new users (form RegistrationFormType)
  # Listener pour intercepter les soumissions de formulaire et définir la date d'inscription pour les nouveaux utilisateurs (formulaire RegistrationFormType)
  App\EventListener\UserRegistrationListener:
    tags:
      - { name: doctrine.event_listener, event: prePersist }

  # Listener to intercept form submissions and set the creation date for a new service (form Service)
  # Listener pour intercepter les soumissions de formulaire et définir la date de création d'un nouveau service (formulaire Service)
  App\EventListener\AddDateOrderFiledOrderForm:
    tags:
      - { name: doctrine.event_listener, event: prePersist }

  # Listener to intercept form submissions and set the creation date for a new service (form Service)
  # Listener pour intercepter les soumissions de formulaire et définir la date de création d'un service (formulaire Service)
  App\EventListener\AddCreateDateFiledServiceForm:
    tags:
      - { name: doctrine.event_listener, event: prePersist }

  # Add the user ID automatically to the form when adding a Service
  # Ajouter automatiquement l'ID utilisateur au formulaire lors de l'ajout d'un service
  App\Form\EventListener\AddUserField:
    arguments: ["@security.helper"]
    tags:
      - { name: "kernel.event_subscriber" }

  # Execute a method getNavBarData() to populate the dropdown in the navigation bar
  # Exécuter une méthode getNavBarData() pour alimenter le menu déroulant dans la barre de navigation
  App\Twig\AppExtension:
    tags: ["twig.extension"]

  # App\Service\Cart:
  #   arguments:
  #     $sessionFactory: '@session.factory'
  #     $serviceItemRepository: '@App\Repository\ServiceItemRepository'
  #     $entityManager: '@doctrine.orm.entity_manager'
