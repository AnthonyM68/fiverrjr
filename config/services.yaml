# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  # paramètres pour chaque type de répertoire
  pictures_directory: "%kernel.project_dir%/public/img/"
  developer_pictures_directory: "%kernel.project_dir%/public/img/developers"
  client_pictures_directory: "%kernel.project_dir%/public/img/clients"
  service_pictures_directory: "%kernel.project_dir%/public/img/services"

services:
  Symfony\Component\Security\Csrf\CsrfTokenManagerInterface: "@security.csrf.token_manager"

  # default configuration for services in *this* file
  _defaults:
    autowire: true # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: "../src/"
    exclude:
      - "../src/DependencyInjection/"
      - "../src/Entity/"
      - "../src/Kernel.php"

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones


  # Enregistrement du service CircularReferenceHandler
  # ndique que le service doit être défini sans avoir besoin de spécifier d'arguments de constructeur ou de propriétés supplémentaires
  App\Serializer\CircularReferenceHandler: ~


  # intercepte le formulaire et créer la date d'enregistrement d'un nouveau User (form RegistrationFormType)
  App\EventListener\UserRegistrationListener:
    tags:
      - { name: doctrine.event_listener, event: prePersist }


  # intercepte le formulaire et créer la date de création d'un service (form Service)
  App\EventListener\AddDateOrderFiledOrderForm:
    tags:
      - { name: doctrine.event_listener, event: prePersist }


  # intercepte le formulaire et créer la date de création d'un service (form Service)
  App\EventListener\AddCreateDateFiledServiceForm:
    tags:
      - { name: doctrine.event_listener, event: prePersist }
  




  # Ajoute l'id User automatiquement au formulaire lors d'un ajout de Service
  App\Form\EventListener\AddUserField:
    arguments: ["@security.helper"]
    tags:
      - { name: "kernel.event_subscriber" }

  # Execute une methode getNavBarData() pour alimenter le dropdown de la navigation
  App\Twig\AppExtension:
    tags: ["twig.extension"]